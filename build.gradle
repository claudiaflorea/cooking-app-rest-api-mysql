plugins {
	id 'org.springframework.boot' version '2.1.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.avast.gradle.docker-compose' version '0.7.1'
	id 'java'
}

group = 'com.practice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'


repositories {
	mavenCentral()
	jcenter()
}

ext {
	mapstructVersion = "1.4.0.Beta2"
	lombokVersion = "1.18.16"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.boot:spring-boot-starter-activemq:2.4.2'
	implementation 'org.apache.activemq:activemq-broker:5.16.1'
	implementation 'org.apache.activemq:activemq-pool:5.16.1'

	runtimeOnly 'mysql:mysql-connector-java'
	compileOnly "org.mapstruct:mapstruct:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}", "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	testAnnotationProcessor "org.mapstruct:mapstruct:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
	implementation 'au.com.dius:pact-jvm-provider-junit:4.0.10'
	implementation 'au.com.dius:pact-jvm-consumer-junit:4.0.10'

}

bootRun {
	jvmArgs = ["-Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.port=9900 -Dcom.sun.management.jmxremote.rmi.port=9900 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.local.only=false"]
}

test {
	useJUnitPlatform()
	testLogging {
		events "PASSED", "FAILED", "SKIPPED"
	}
}

springBoot {
	buildInfo {
		properties {
			name ='Spring Boot App wth Gradle'
		}
	}
}

dockerCompose {
	useComposeFiles = ['docker-compose.yml']
}